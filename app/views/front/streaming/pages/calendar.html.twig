
    <style>
        #calendar {
            max-width: 900px;
            margin: 40px auto;
        }
    </style>
    <link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/5.10.1/main.min.css' rel='stylesheet' />

    <form action="/front_api/update" class="ajax-form" id="calendar-form">
        <input type="hidden" name="type" value="StationMedia.update" />
        <input type="hidden" name="params[station_media_id]" value="" id="stationMediaId" />
    </form>
    <div id="slider-container">
        <label for="slotDurationRange">Slot Duration (minutes): </label>
        <input type="range" id="slotDurationRange" min="1" max="60" step="2" value="30">
        <span id="durationValue">30</span> minutes
    </div>

    <div id='calendar' style="max-height:calc(100vh - 135px)"></div>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/6.1.15/index.global.js" integrity="sha512-3I+0zIxy2IkeeCvvhXUEu+AFT3zAGuHslHLDmM8JBv6FT7IW6WjhGpUZ55DyGXArYHD0NshixtmNUWJzt0K32w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridDay',
                slotDuration: '00:05:00', // Time slots every 30 minutes
                allDaySlot: false, // Disable all-day slot
                editable: true,
                droppable: true, 
                nowIndicator: true,
                scrollTime: '{{now}}',
                now: "{{now}}",
                events: 
                [
                    {% for item in station.items %}
                    {
                        title: '{{item.media.name}}',
                        id: '{{item.station_media_id}}',
                        start: '{{item.date|date('Y-m-d')}}T{{item.start_at}}',
                        end: '{{item.date|date('Y-m-d')}}T{{item.start_at|date_modify("+" ~ (item.media.field.duration ?? '1') ~ " seconds")|date("H:i:s")}}'
                    },
                    {% endfor %}
                ],

                dateClick: function(info) {
                    console.log(info)
                    jQuery('#station-id').val(info.id)
                    jQuery('#find-track-popup').toggleClass('hidden')

                    console.log('Date: ' + info.dateStr.substr(0, 10));
                    console.log('Time: ' + );
                },
                
                eventDragStop: function(info) {
                    jQuery("#stationMediaId").val(info.event.id);
                },
                eventDrop: function(info) {
                    jQuery("#stationMediaStart").val(info.event.startStr.substr(11, 8));
                    jQuery("#stationMediaStartDate").val(info.event.startStr.substr(0, 10));
                    setTimeout(function(){

                        jQuery("#stationMediaId").parent('form').submit();
                    }, 50)

                },
                
                eventResize: function(info) {
                    alert("This item depends on the media duration");
                    info.revert();
                }
            });

            calendar.render();

            var slider = document.getElementById('slotDurationRange');
            var durationValue = document.getElementById('durationValue');

            slider.addEventListener('input', function() {
                var newDuration = slider.value;
                durationValue.textContent = newDuration;
                
                // Convert the slider value to the appropriate format for slotDuration (HH:mm:ss)
                var slotDuration = '00:' + (newDuration.length === 1 ? '0' : '') + newDuration + ':00';
                
                // Reconfigure the calendar with the new slotDuration
                calendar.setOption('slotDuration', slotDuration);
            });
        });
    </script>


    {% include 'views/front/' ~ template ~ '/popups/find-track.html.twig' %}
