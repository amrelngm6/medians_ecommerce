

    <link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/5.10.1/main.min.css' rel='stylesheet' />


    <div class="pb-20 w-full">
        
        <form action="/front_api/update" class="ajax-form" id="calendar-form">
            <input type="hidden" name="type" value="StationMedia.update" />
            <input type="hidden" name="params[station_media_id]" value="" id="stationMediaId" />
            <input type="hidden" name="params[start_at]" value="" id="stationMediaStartTime" />
            <input type="hidden" name="params[date]" value="" id="stationMediaDate" />
        </form>

        <div class="container mx-auto">
        {{station.active_item}}
        {% include 'views/front/' ~ template ~ '/pages/station/station-stream-block.html.twig' %}
        </div>

        
        <div class="w-full flex gap-20 relative">
            <div id="slider-container" class="w-32" >
                
                <div class="absolute top-0 bottom-0 mb-20" style=" max-width: 200px; display: grid;  transform: scale(.5);">

                    <!-- put all in a wrapper:-->
                    <div class="wrap" role="group" aria-label="slider with ruler" style="display: grid; --min: 1; --val: 30; --max: 60">
                        <!-- slider:-->
                        <input id="r" type="range" list="l" step="1" min="1" max="60" />
                        <!-- value display:-->
                        <output for="r"></output>
                        <!-- ruler:-->
                        <datalist id="l">
                            {% set arr = range(0, 12) %}
                            {% for i in range(1, 10) %}
                            <option value="{{((i * 6) - 1) }}" style="--idx: {{((i * 6) - 4)}}" ></option>
                            <option value="{{((i * 6) - 1) }}" style="--idx: {{((i * 6) - 2)}}" ></option>
                            <option value="{{((i * 6)) }}" style="--idx: {{((i * 6))}}" label="{{((i * 6))}}" ></option>

                            {% endfor %}
                            <option value="22" style="--idx: 22"></option>

                        </datalist>
                    </div>
                    <section class="range-info">
                        <p class="box box--fail box--list"></p>
                        <p class="box box--warn box--trig"></p>
                        <p class="box box--fail box--cmix"></p>
                    </section>
                </div>
            </div>

            <div class="w-full pt-10">
                <div class="w-full bg-white p-8 rounded-xl shadow-md" id='calendar' style="width: calc(100% - 60px); max-height:calc(100vh - 50px)"></div>
            </div>

        </div>
        <div class="max-w-lg mx-auto transition rounded-lg bg-white p-6 fixed left-0 transition-all right-0 top-auto shadow-xl" style="z-index: 999; bottom: -100%" id="calendar-hover-info">
            <label class="disabled text-slate-800 flex gap-2 w-full items-center rounded-md p-3 transition-all hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100">
                <div class="mr-4 grid place-items-center"><img alt="candice" id="eventHoverPopupPicture" src="{{item.picture}}" class="relative inline-block h-12 w-12 !rounded-full object-cover object-center"></div>
                <div style="max-width:78%" >
                    <h6 id="eventHoverPopupName" class="truncate text-slate-800 font-medium"></h6>
                    <p id="eventHoverPopupTime"  class=" text-sm"></p>
                </div>
            </label>
        </div>
    </div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/6.1.15/index.global.js" integrity="sha512-3I+0zIxy2IkeeCvvhXUEu+AFT3zAGuHslHLDmM8JBv6FT7IW6WjhGpUZ55DyGXArYHD0NshixtmNUWJzt0K32w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
    <style>
.fc-day-today {
    background: #FFF !important;
    border: none !important;
  
} 
    </style>
    <script>
    
        $(function(){
            addEventListener('load', e => {
            if (+document.querySelector('option').getBoundingClientRect().width)
                document.body.style.setProperty('--list', 'none')
        })

        /* 2. update the --val custom property on dragging slider thumb */
        addEventListener('input', e => {
            let _t = e.target;
            _t.parentNode.style.setProperty('--val', +_t.value)
        })


        var calendar;
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');

            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridDay',
                slotDuration: '00:30:00', // Time slots every 30 minutes
                allDaySlot: false, // Disable all-day slot
                editable: true,
                droppable: true, 
                nowIndicator: true,
                scrollTime: '{{now}}',
                now: "{{now}}",
                color: '#333',

                events: '/front_api?type=station-media-json&params[station_id]={{station.station_id}}&load=json',

                {# [
                    {% for item in station.items %}
                    {
                        title: '{{item.media.name ?? item.title}}',
                        id: '{{item.station_media_id}}',
                        picture: '{{item.media.picture}}',
                        station_id: '{{station.station_id}}',
                        backgroundColor: '#333',
                        color: '#111',
                        start: '{{item.date|date('Y-m-d')}}T{{item.start_at}}',
                        end: '{{item.date|date('Y-m-d')}}T{{item.start_at|date_modify("+" ~ (item.duration ?? '1') ~ " seconds")|date("H:i:s")}}'
                    },
                    {% endfor %}
                ], #}

                dateClick: function(info) {
                    
                    jQuery("#stationRecordStart").val(info.dateStr.substr(11, 8));
                    jQuery("#stationMediaStart").val(info.dateStr.substr(11, 8));
                    jQuery("#linkStationMediaStart").val(info.dateStr.substr(11, 8));
                    jQuery('#stationRecordDate').val(info.dateStr.substr(0, 10))
                    jQuery('#stationMediaStartDate').val(info.dateStr.substr(0, 10))
                    jQuery("#linkStationMediaStartDate").val(info.dateStr.substr(0, 10));
                    jQuery('#find-track-popup').toggleClass('hidden')

                },

                eventClick: function(info) {

                    let link = '/front_api?type=station-media-popup&params[station_id]={{station.station_id}}&params[station_media_id]='+ info.event.id;
                    loadSection(link, 'editStationPopupContent')

                    let props = info.event.extendedProps;
                    jQuery('#editStationStationId').val(props.station_id)
                    jQuery('#link-station-id').val(props.station_id)
                    jQuery('#editStationMediaId').val(info.event.id)
                    jQuery('#stationMediaStart').val(info.event.startStr.substr(11, 8))
                    jQuery('#editStationMediaStartAt').val(info.event.startStr.substr(11, 8))
                    jQuery('#editStationMediaStartDate').val(info.event.startStr.substr(0, 10))
                    jQuery('#stationMediaStartDate').val(info.event.startStr.substr(0, 10))
                    jQuery('#editStationMediaPicture').attr('src', props.picture)
                    jQuery('#editStationMediaName').text(info.event.title)
                    jQuery('#edit-station-track-popup').toggleClass('hidden')
                },
                
                eventMouseEnter: function(info) {
                    let props = info.event.extendedProps;
                    jQuery('#eventHoverPopupName').text(info.event.title)
                    jQuery('#calendar-hover-info').css('bottom', '0')
                    jQuery('#eventHoverPopupPicture').removeClass('hidden').attr('src', props.picture)
                    if (!props.picture) {
                        jQuery('#eventHoverPopupPicture').addClass('hidden')
                        jQuery('#eventHoverPopupName').text(info.event.title)
                        jQuery("#eventHoverPopupTime").text(info.event.startStr.substr(11, 8) + ' - ' +info.event.endStr.substr(11, 8));
                    }
                },
                
                eventMouseLeave: function(info) {
                    jQuery('#calendar-hover-info').css('bottom', '-100%')

                },
                
                eventDragStop: function(info) {
                    jQuery("#stationMediaId").val(info.event.id);
                },
                eventDrop: function(info) {
                    jQuery("#stationMediaDate").val(info.event.startStr.substr(0, 10));
                    jQuery("#stationMediaStartTime").val(info.event.startStr.substr(11, 8));
                    setTimeout(function(){
                        jQuery("#calendar-form").submit();
                    }, 50)

                },
                
                eventResize: function(info) {
                    alert("This item depends on the media duration");
                    info.revert();
                }
            });

            calendar.render();

            {# var slider = document.getElementById('slotDurationRange');
            var durationValue = document.getElementById('durationValue');

            slider.addEventListener('input', function() {
                durationValue.textContent = newDuration;
                updateSlotDuration();
            }); #}
    
    		loadStation({{station.station_id}}, null)

        });
        
                
        function updateSlotDuration (newDuration, calendar) 
        {
            if (newDuration < 1) {
                newDuration = 1
            }

            // Convert the slider value to the appropriate format for slotDuration (HH:mm:ss)
            var slotDuration = '00:' + (newDuration.length === 1 ? '0' : '') + newDuration + ':00';
            
            // Reconfigure the calendar with the new slotDuration
            calendar.setOption('slotDuration', slotDuration);
            
        }
        
        addEventListener('load', e => {
            if(+document.querySelector('option').getBoundingClientRect().width) {
                    document.body.style.setProperty('--list', 'none')
            }
        })

        /* 2. update the --val custom property on dragging slider thumb */
        jQuery(document).on('input', 'input[type=range]' , function(e) {
            let _t = e.target;
            _t.parentNode.style.setProperty('--val', +_t.value)
            updateSlotDuration(_t.value, calendar)
            calendar.scrollToTime( "{{'now'| date('H:i:00')}}");

        })

        })
    </script>


    {% include 'views/front/' ~ template ~ '/popups/station-add-media.html.twig' %}
    {% include 'views/front/' ~ template ~ '/popups/station-calendar.html.twig' %}
    {% include 'views/front/' ~ template ~ '/popups/station-record.html.twig' %}
