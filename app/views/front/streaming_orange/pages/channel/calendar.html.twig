

    <link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/5.10.1/main.min.css' rel='stylesheet' />


    <div class="pt-10 pb-20 w-full">
    
        <div class="pt-4 text-center">
            <p class="px-6 text-gray-300 dark:text-gray-300">{{lang.translate('Manage streaming')}} </p>
            <h1 class="px-6 text-2xl text-gray-800 dark:text-gray-100">{{channel.name}} </h1>
            <p class="px-6 text-primary">{{lang.translate('You should set the Videos to display at specified time')}} </h1>
        </div>

        <form action="/front_api/update" class="ajax-form" id="calendar-form">
            <input type="hidden" name="type" value="ChannelMedia.update" />
            <input type="hidden" name="params[channel_media_id]" value="" id="channelMediaId" />
            <input type="hidden" name="params[start_at]" value="" id="channelMediaStartTime" />
            <input type="hidden" name="params[date]" value="" id="channelMediaDate" />
        </form>

        <div class="w-full flex gap-20 relative">
            <div id="slider-container" class="w-32" >
                
                <div class="absolute top-0 bottom-0 mb-20" style=" max-width: 200px; display: grid;  transform: scale(.5);">

                    <!-- put all in a wrapper:-->
                    <div class="wrap" role="group" aria-label="slider with ruler" style="display: grid; --min: 1; --val: 30; --max: 60">
                        <!-- slider:-->
                        <input id="r" type="range" list="l" step="1" min="0" max="60" />
                        <!-- value display:-->
                        <output for="r"></output>
                        <!-- ruler:-->
                        <datalist id="l">
                            {% set arr = range(0, 12) %}
                            {% for i in range(1, 10) %}
                            <option value="{{((i * 6) - 1) }}" style="--idx: {{((i * 6) - 4)}}" ></option>
                            <option value="{{((i * 6) - 1) }}" style="--idx: {{((i * 6) - 2)}}" ></option>
                            <option value="{{((i * 6)) }}" style="--idx: {{((i * 6))}}" label="{{((i * 6))}}" ></option>

                            {% endfor %}
                            <option value="22" style="--idx: 22"></option>

                        </datalist>
                    </div>
                    <section class="range-info">
                        <p class="box box--fail box--list"></p>
                        <p class="box box--warn box--trig"></p>
                        <p class="box box--fail box--cmix"></p>
                    </section>
                </div>
            </div>

            <div class="w-full pt-10">
                <div class="w-full bg-white p-8 rounded-xl shadow-md dark:bg-gray-900 dark:text-gray-300" id='calendar' style="width: calc(100% - 60px); max-height:calc(100vh - 50px)"></div>
            </div>
        </div>
        <div class="max-w-lg mx-auto transition rounded-lg bg-white p-6 fixed left-0 transition-all right-0 top-auto shadow-xl" style="z-index: 999; bottom: -100%" id="calendar-hover-info">
            <label class="disabled text-slate-800 flex gap-2 w-full items-center rounded-md p-3 transition-all hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100">
                <div class="mr-4 grid place-items-center"><img alt="candice" id="eventHoverPopupPicture" src="{{channel.picture}}" class="relative inline-block h-12 w-12 !rounded-full object-cover object-center"></div>
                <div style="max-width:78%" >
                    <h6 id="eventHoverPopupName" class="truncate text-slate-800 font-medium"></h6>
                    <p id="eventHoverPopupTime"  class=" text-sm"></p>
                </div>
            </label>
        </div>
    </div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/6.1.15/index.global.js" integrity="sha512-3I+0zIxy2IkeeCvvhXUEu+AFT3zAGuHslHLDmM8JBv6FT7IW6WjhGpUZ55DyGXArYHD0NshixtmNUWJzt0K32w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
<script>

var calendar;
var selected_media = [];

$(function() {

        addEventListener('load', e => {
            if (+document.querySelector('option').getBoundingClientRect().width)
                document.body.style.setProperty('--list', 'none')
        })

        /* 2. update the --val custom property on dragging slider thumb */
        addEventListener('input', e => {
            let _t = e.target;
            _t.parentNode.style.setProperty('--val', +_t.value)
        })

        const calendarEl = document.getElementById('calendar');

        calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'timeGridDay',
            slotDuration: '00:30:00', // Time slots every 30 minutes
            allDaySlot: false, // Disable all-day slot
            editable: true,
            selectable: true,
            droppable: true, 
            nowIndicator: true,
            scrollTime: '{{now}}',
            now: "{{now}}",
            color: '#333',

            events: '/front_api?type=channel-media-json&params[channel_id]={{channel.channel_id}}&load=json',
            dateClick: function(info) {
                
                jQuery("#channelMediaStart").val(info.dateStr.substr(11, 8));
                jQuery("#linkChannelMediaStart").val(info.dateStr.substr(11, 8));
                jQuery('#channelMediaStartDate').val(info.dateStr.substr(0, 10))
                jQuery("#linkChannelMediaStartDate").val(info.dateStr.substr(0, 10));
                jQuery('#find-track-popup').toggleClass('hidden')

            },

            select: function(info) {
                
                var x = new Date(info.startStr);
                let seconds = Math.abs(x.getTime() - (new Date(info.endStr)).getTime())/1000;
                let minutes = seconds/60;
                let currentduration = jQuery('#r').val()
                if (currentduration == minutes)  
                    return;

                jQuery('#edit-channel-range-popup').toggleClass('hidden')
                jQuery('#channel-range-date').val(info.startStr.substr(0, 10))
                jQuery('#channel-range-start').val(info.startStr.substr(11, 8))
                jQuery('#channel-range-end').val(info.endStr.substr(11, 8))
                jQuery('#channel-range-time').html(info.startStr.substr(11, 8) + ' | ' + info.endStr.substr(11, 8))
                jQuery('#channel-range-duration').html(toHHMMSS(seconds))
            },

            eventClick: function(info) {

                let link = '/front_api?type=channel-media-popup&params[channel_id]={{channel.channel_id}}&params[channel_media_id]='+ info.event.id;
                loadSection(link, 'editChannelPopupContent')

                let props = info.event.extendedProps;
                jQuery('#editChannelChannelId').val(props.channel_id)
                jQuery('#link-channel-id').val(props.channel_id)
                jQuery('#editChannelMediaId').val(info.event.id)
                jQuery('#channelMediaStart').val(info.event.startStr.substr(11, 8))
                jQuery('#editChannelMediaStartAt').val(info.event.startStr.substr(11, 8))
                jQuery('#editChannelMediaStartDate').val(info.event.startStr.substr(0, 10))
                jQuery('#channelMediaStartDate').val(info.event.startStr.substr(0, 10))
                jQuery('#editChannelMediaPicture').attr('src', props.picture)
                jQuery('#editChannelMediaName').text(info.event.title)
                jQuery('#edit-channel-track-popup').toggleClass('hidden')
            },
            eventMouseEnter: function(info) {
                let props = info.event.extendedProps;
                jQuery('#eventHoverPopupName').text(info.event.title)
                jQuery('#calendar-hover-info').css('bottom', '0')
                jQuery('#eventHoverPopupPicture').removeClass('hidden').attr('src', props.picture)
                if (!props.picture) {
                    jQuery('#eventHoverPopupPicture').addClass('hidden')
                    jQuery('#eventHoverPopupName').text(info.event.title)
                    jQuery("#eventHoverPopupTime").text(info.event.startStr.substr(11, 8) + ' - ' +info.event.endStr.substr(11, 8));
                }
            },
            
            eventMouseLeave: function(info) {
                console.log(info)
                jQuery('#calendar-hover-info').css('bottom', '-100%')

            },
            
            eventDragStop: function(info) {
                jQuery("#channelMediaId").val(info.event.id);
            },
            eventDrop: function(info) {
                jQuery("#channelMediaDate").val(info.event.startStr.substr(0, 10));
                jQuery("#channelMediaStartTime").val(info.event.startStr.substr(11, 8));
                setTimeout(function(){
                    jQuery("#calendar-form").submit();
                }, 50)

            },
            
            eventResize: function(info) {
                alert("This item depends on the media duration");
                info.revert();
            }
        });

        calendar.render();

        {# var slider = document.getElementById('slotDurationRange');
        var durationValue = document.getElementById('durationValue');

        slider.addEventListener('input', function() {
            durationValue.textContent = newDuration;
            updateSlotDuration();
        }); #}

        loadChannel({{channel.channel_id}}, null)

        
                
        function updateSlotDuration (newDuration, calendar) 
        {
            if (newDuration < 1) {
                newDuration = 1
            }

            // Convert the slider value to the appropriate format for slotDuration (HH:mm:ss)
            var slotDuration = '00:' + (newDuration.length === 1 ? '0' : '') + newDuration + ':00';
            
            // Reconfigure the calendar with the new slotDuration
            calendar.setOption('slotDuration', slotDuration);
            
        }
        
        addEventListener('load', e => {
            if(+document.querySelector('option').getBoundingClientRect().width) {
                    document.body.style.setProperty('--list', 'none')
            }
        })

        /* 2. update the --val custom property on dragging slider thumb */
        jQuery(document).on('input', 'input[type=range]' , function(e) {
            let _t = e.target;
            if (_t.value < 1){
                _t.value = 1
            }
            _t.parentNode.style.setProperty('--val', +_t.value)
            updateSlotDuration(_t.value, calendar)
            calendar.scrollToTime( "{{'now'| date('H:i:00')}}");
        })
        calendar.scrollToTime( "{{'now'| date('H:i:00')}}");

        jQuery(document).on('click', 'label', function(){
            console.log(selected_media)
        })
});

    </script>


    {% include 'views/front/' ~ template ~ '/popups/channel-add-media.html.twig' %}
    {% include 'views/front/' ~ template ~ '/pages/channel/channel-calendar.html.twig' %}
    {% include 'views/front/' ~ template ~ '/pages/channel/channel-range-popup.html.twig' %}
